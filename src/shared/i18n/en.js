const En18n = {
  appName: () => 'saglik',
  _common: {
    items: () => 'Items',
    total: () => 'Total',
    subscribe: () => 'Subscribe',
    address: () => 'Address',
    email: () => 'Email',
    phone: () => 'Phone',
    checkout: () => 'Checkout',
    emailAddress: () => 'Email Address',
    continue: () => 'Continue',
    show: () => 'Show',
    current: () => 'Current',
    shopNow: () => 'Shop Now',
    shoppingCart: () => 'Shopping Cart',
    product: () => 'Product',
    price: () => 'Price',
    qty: () => 'Qty',
    subtotal: () => 'Subtotal',
    wishlist: () => 'Move to Wishlist',
    edit: () => 'Edit',
    summary: () => 'Summary',
    country: () => 'Country',
    state: () => 'State/Province',
    zipCode: () => 'Zip/Postal Code',
    none: () => 'None',
    loading: () => 'Loading',
    notSubscribedToAnyNewsLetter: () => 'You are currently not subscribed to any newsletter',
    accountInfo: () => 'Account Information',
    thankYou: () => 'Thank you',
    your: () => 'Your',
    reviews: () => 'Reviews',
    available: () => 'Available',
    outOfStock: () => 'Out of Stock',
    availability: () => 'Availability',
    share: () => 'Share',
    moreInfo: () => 'More Info',
    tags: () => 'Tags',
    addYourTags: () => 'Add Your Tags',
    addAReview: () => 'Add a Review',
    yourReview: () => 'Your Review',
    yourRating: () => 'Your rating',
    rate: () => 'Rate',
    perfect: () => 'Perfect',
    good: () => 'Good',
    average: () => 'Average',
    notThatBad: () => 'Not that bad',
    veryPoor: () => 'Very Poor',
    free: () => 'Free',
    shipping: () => 'Shipping',
    guarantee: () => 'Guarantee',
    money: () => 'Money',
    online: () => 'Online',
    support: () => 'Support',
    productShortName: () => 'Product Short Name',
    addTag: () => 'Add Tag',
    quickView: () => 'Quick View',
    category: () => 'Category',
    hot: () => 'HOT',
    sortBy: () => 'Sort By',
    small: () => 'Small',
    medium: () => 'Medium',
    large: () => 'Large',
    extraLarge: () => 'Extra Large',
    brand: () => 'Brand',
    upToNPercentOff: (n) => `Up to ${n}% off`,
    iAmSearchingFor: () => 'I\'m searching for',
    askQuestion: () => 'Ask Question',

    _labels: {
      firstName: () => 'First Name',
      lastName: () => 'Last Name',
      sendMessagesToUserButton: () => 'Send Message To User',
      LeaveAReviewButton: () => 'Leave A Review',
      AskQuestionToUserButton: () => 'Ask a Question To User',
      AskQuestionToVendorButton: () => 'Ask Question to Vendor',
      emailAddress: () => 'Email Address',
      password: () => 'Password',
      productSearch: () => 'Product Search',
      latestOrders: () => 'Latest Orders',
      informationTitle: () => 'Information Title',
      categoryName: () => 'Category Name',
      addProductPageGuides: () => 'Add Product Guidelines',
      categoryGroup: () => 'Category Group',
      productName: () => 'Product Name',
      nameOfTheProduct: () => 'Name of the Product',
      productStatus: () => 'Product Status',
      productOwner: () => 'Product Owner',
      noResult: () => 'No Results Found',
      storeItem: () => 'Store Item Code',
      store: () => 'Store',
      productCode: () => 'Product Code',
      dateOfCreation: () => 'Date of Creation',
      start: () => 'Start',
      end: () => 'Finish',
      search: () => 'Search',
      cargoName: () => 'Cargo Name',
      shipmentNumber: () => 'Shipment Number',
      cargoTracking: () => 'Cargo Tracking',
      clean: () => 'Clean',
      informationType: () => 'Information Type',
      information: () => 'Create Information',
      orderSearch: () => 'Order Search',
      customerName: () => 'Customer Name',
      orderStatus: () => 'Order Status',
      orderCode: () => 'Order Code',
      orderdate: () => 'Order Date',
      amountpaid: () => 'Amount Paid',
      period: () => 'Period',
      totalPrice: () => 'Total Price',
      quantity: () => 'Quantity',
      answer: () => 'Question & Answer Search',
      questionDate: () => 'Question Date',
      topic: () => 'Topic',
      status: () => 'Status',
      agreeTermsCond: () => 'I agree Terms & Conditions',
      createContentPage: () => 'Create Content Page',
      updateContentPage: () => 'Update Content Page',
      register: () => 'Register',
      uploadFile: () => 'Upload File',
      rememberMe: () => 'Remember Me',
      forgotPwd: () => 'Forgot your password?',
      login: () => 'Login',
      billingShippingAreSame: () => 'My billing and shipping address are the same',
      billingAddress: () => 'Billing Address',
      shippingAddress: () => 'Shipping Address',
      signUpNewsLetter: () => 'Sign up our Newsletter',
      phoneNum: () => 'Phone Number',
      submit: () => 'Submit',
      name: () => 'Name',
      title: () => 'Title',
      action: () => 'Action',
      description: () => 'Description',
      apply: () => 'Apply',
      featured: () => 'Featured',
      image: () => 'Image',
      approve: () => 'Approve',
      reject: () => 'Reject',
      reason: () => 'Reason',
      close: () => 'Close',
      select: () => 'Select',
      enterBriefDesc: () => 'Please Enter Brief Description',
      selected: () => 'Selected',
      chooseCategory: () => 'Choose Category',
      categories: () => 'Categories',
      changePwd: () => 'Change Password',
      confirmPwd: () => 'Confirm Password',
      back: () => 'Back',
      save: () => 'Save',
      dashboard: () => 'Dashboard',
      newsletter: () => 'newsletters',
      addToCart: () => 'Add to Cart',
      addedCart: () => 'Added to the Cart',
      addToWishlist: () => 'Add to Wishlist',
      defaultSorting: () => 'Default sorting',
      sortByPopularity: () => 'Sort by popularity',
      sortByAverageRating: () => 'Sort by average rating',
      sortByNewness: () => 'Sort by newness',
      sortByPriceLowToHigh: () => 'Sort by price: low to high',
      sortByPriceHighToLow: () => 'Sort by price: high to low',
      filter: () => 'Filter',
      size: () => 'Size',
      startingAt: () => 'Starting at',
      shopBy: () => 'Shop By',
      btnText: () => 'Button Text',
      firstHeading: () => 'First Heading',
      secondHeading: () => 'Second Heading',
      thirdHeading: () => 'Third Heading',
      forthHeading: () => 'Forth Heading',
      price: () => 'Price',
      sliderImages: () => 'Slider Images',
      userProfile: () => 'User Profile',
      editUserProfile: () => 'Edit User Profile',
      update: () => 'Update Profile',
      editBilling: () => 'Edit Billing Address',
      type: () => 'Type',
      address: () => 'Address',
      phone: () => 'Phone Number',
      zip: () => 'Zip / Postal Code',
      city: () => 'City',
      state: () => 'State/Province',
      country: () => 'Country',
      updateBilling: () => 'Update Billing Address',
      updateShipping: () => 'Update Shipping Address',
      shipping: () => 'Shipping Address No',
      editShipping: () => 'Edit Shipping Address No',
      edit: () => 'Edit',
      delete: () => 'Delete',
      related: () => 'Related Products',
      others: () => 'Other Products',
      write: () => 'Write Question',
      question: () => 'Question',
      questionTitle: () => 'Question Title',
      visibleTo: () => 'Visible To',
      me: () => 'Me Only',
      everyone: () => 'EveryOne',
      noQuestion: () => 'No Question Ask Thus So Far!',
      detailDescription: () => 'Detail Description',
      summary: () => 'Summary',
      estimate: () => 'Estimate Shipping and Tax',
      subTotal: () => 'Subtotal',
      tax: () => 'Tax',
      orderTotal: () => 'Order Total',
      checkout: () => 'Go to Checkout',
      multipleCheckout: () => 'Check Out with Multiple Addresses',
      dateOfQuestion: () => 'Date of Question',
      product: () => 'Product',
      cargo: () => 'Cargo',
      cancel: () => 'Cancel',
      change: () => 'Change',
      return: () => 'Return',
      payBack: () => 'Pay Back',
      public: () => 'Public',
      private: () => 'Private',
      pending: () => 'Pending',
      shipped: () => 'Shipped',
      dispute: () => 'Dispute',
      refund: () => 'Refund',
      cancelled: () => 'Cancelled',
      processing: () => 'Processing',
      payment: () => 'Payment Date',
      message: () => 'Type a message',
      addNew: () => 'Add New',
      emptyVendorList: () => 'There are no pending vendors left',
      notApproveYet: () => 'Sorry!! You are not approved yet',
      approveSelected: () => 'Approve Selected',
      aboutUs: () => 'About Us',
      addProductPageGuidelines: () => 'Add Product Page Guidelines',
      termsAndConditions: () => 'Terms and Conditions',
      vendorAgreement: () => 'Vendor Agreement',
      selectAnOption: () => 'Select an Option',
      newPassword: () => 'Enter your new password',
      changePassword: () => 'Change Password',
      btnLink: () => 'Enter link',
    },
  },
  _cart: {
    viewCart: () => 'View Cart',
    yourCartIsEmpty: () => 'Your Cart is Empty!',
    loginToCheckout: () => 'Login To Continue Checkout',
    addedProductToCart: () => 'You\'ve just added this product to the <br />cart:</p>',
    goToCartPage: () => 'Go to cart page',
  },
  header: {
    _menuItems: {
      home: () => 'Home',
      aboutUs: () => 'About Us',
      contactUs: () => 'Contact Us',
      admin: () => 'Admin',
      dashboard: () => 'Dashboard',
      contentPages: () => 'Content Pages',
      orderSearch: () => 'Order Search',
      createContentPages: () => 'Create Content Pages',
      cart: () => 'Cart',
      category: () => 'Category',
      addCategory: () => 'Add Category',
      addDisplayImage: () => 'Add Display Image',
      displayImage: () => 'Display Image',
      statistics: () => 'Statistics',
      allCategories: () => 'All Categories',
      informationType: () => 'Create User Guide',
      information: () => 'Create Information',
      help: () => 'Help',
      product: () => 'Product',
      addProduct: () => 'Add Product',
      approveProduct: () => 'Approve Products',
      userMessage: () => 'User Messages',
      userOrders: () => 'User Orders',
      allProducts: () => 'All Products',
      productSearch: () => 'Product Search',
      vendor: () => 'Vendor',
      approveVendor: () => 'Approve Vendor',
      myAccount: () => 'My Account',
      account: () => 'Account',
      register: () => 'Register',
      registerAsVendor: () => 'Register As Vendor',
      login: () => 'Login',
      forgotPwd: () => 'Forgot Password',
      logout: () => 'Logout',
    },
  },
  _accountMenu: {
    myAccount: () => 'My Account',
    accountDashboard: () => 'Account Dashboard',
    addressBook: () => 'Address Book',
    myOrders: () => 'My Orders',
    billingAgreements: () => 'Billing Agreements',
    recurringProfiles: () => 'Recurring Profiles',
    myProduct: () => 'My Product',
    myTags: () => 'My Tags',
    myWishlist: () => 'My Wishlist',
    myApplications: () => 'My Applications',
    newsletterSubscriptions: () => 'Newsletter Subscriptions',
    myDownloadableProducts: () => 'My Downloadable Products',
  },
  footer: {
    _section: {
      subscribeNewsLetter: () => 'subscribe newsletter',
      offerInfo1: () => 'Get all the latest information on Events, Sales and Offers.',
      contactInfo: () => 'Contact Info',
      copyright: () => 'Saglikcafe. &copy;  2020. All Rights Reserved',
      mainFeatures: () => 'Main Features',
    },
  },
  _newsletterPopup: {
    beFirstToKnow: () => 'Site under construction',
    subsToSaglik: () => 'We will be on service very soon.',
    dontShowPopupAgain: () => 'Don\'t show this popup again',
  },
  homepage: {
    _banner: {
      seeAllFindYours: () => 'See all and find yours',
      browserInAllCategories: () => 'Browse in all our categories',
    },
    _supportInfo: {
      customerSupport: () => 'Customer Support',
      needAssistance: () => 'Need Assistance?',
      securePayment: () => 'Secured Payment',
      safeFast: () => 'Safe & Fast',
      freeReturns: () => 'Free Returns',
      easyFree: () => 'Easy & Free',
      freeShipping: () => 'Free Shipping',
      orderOver: () => 'Orders Over',
    },
    _featureProduct: {
      featureProduct: () => 'Feature Product',
    },
    _shopCategory: {
      shopByCategory: () => 'Shop By Category',
    },
  },
  _registerPage: {
    registerAsVendor: () => 'Register As Vendor',
    readAndSignAgreement: () => 'Please read the agreement, sign it and upload it',
    accessViaSocialNetwork: () => 'Access your account through your social networks.',
  },
  _forgotPwdPage: {
    forgotPwd: () => 'Forgot Your Password',
    resetPwd: () => 'Reset Password',
    enterEmailAddr: () => 'Please enter your email address below to receive a password reset link.',
    resetMyPwd: () => 'Reset My Password',
  },
  _shoppingCartPage: {
    continueShopping: () => 'Continue Shopping',
    clearCart: () => 'Clear Shopping Cart',
    updateCart: () => 'Update Shopping Cart',
    applyDiscountCode: () => 'Apply Discount Code',
    applyDiscount: () => 'Apply Discount',
    enterDiscountCode: () => 'Enter discount code',
  },
  _contactUsPage: {
    contactUs: () => 'Contact Us',
    contactDetails: () => 'Contact <strong>Details</strong>',
    whatsOnUrMind: () => 'What’s on your mind?',
    writeUs: () => 'Write <strong>Us</strong>',
  },
  _aboutUsPage: {
    ourHistory: () => 'Our History',
    whoWeAre: () => 'Who is the Health Cafe?',
    aboutUs: () => 'About Us',
    whyUs: () => 'Why was the Health Cafe needed?',
    whyUsDescription: () => `The Health Cafe has set out to fill these gaps due to the fact that the most
     important need of people is the right to be healthy, 
    the number of portals publishing with bibliography is too low,
     the difficulty in reaching the right information, and the limited number of centers in the field of 
     health that only publish in this format.`,
    ourWork: () => 'What does the Health Cafe do?',
    ourWorkDescription: () => `Health Cafe closely follows important discoveries, results and 
    developments in the field of health in our world and instantly conveys them to you, our valuable people.`,
    discription: () => `Health Cafe is the first viral magazine magazine of our country that publishes up-to-date,
     reliable and referenced publication in the field of health magazine.`,
  },
  _categoryPage: {
    createCategory: () => 'Create Category',
    updateCategory: () => 'Update Category',
    noCategories: () => 'There are no categories',
    categoryList: () => 'Category List',
    wantToDelete: () => 'Do you really want to delete?',
  },
  _displayImagePage: {
    updateDisplayImage: () => 'Update Display Image',
    displayImage: () => 'Display Image',
    note: () => 'Note',
    maxFileSize: () => 'Maximum file size for image is 5Mb',
    minImageHeight: () => 'Minimum height for banner image is 3500px',
    minImageWidth: () => 'Minimum width  for banner image is 3500px',
  },
  _BannerPage: {
    updateBanner: () => 'Update Banner',
    banner: () => 'Banner',
    note: () => 'Note',
    maxFileSize: () => 'Maximum file size for image is 10Mb',
    minImageHeight: () => 'Minimum height for banner image is 3500px',
    minImageWidth: () => 'Minimum width  for banner image is 3500px',
  },
  _productPage: {
    approveProduct: () => 'Approve Products',
    noProducts: () => 'There are no products',
    createProduct: () => 'Create Product',
    updateProduct: () => 'Update Product',
    addProduct: () => 'Add Product',
    productList: () => 'Product List',
    relatedProducts: () => 'Related Products',
    rejectedProducts: () => 'Rejected Products',
    noRejectedProducts: () => 'There are no rejected products',
    pendingProducts: () => "Pending Products",
    noPendingProducts: () => 'There are no pending products',
  },
  _statistics: {
    dateCannotBeEmpty: () => 'Please select at least one date',
    fromDataCannotBeSmaller: () => 'From date cannot be higher than To date',
  },
  _vendorPage: {
    approveVendors: () => 'Approve Vendors',
  },
  _editAccountPage: {
    editAccountInfo: () => 'Edit Account Information',
  },
  _dashboardPage: {
    profileUpdated: () => 'The profile has been updated',
    contactInfo: () => 'Contact Information',
    addressBook: () => 'Address Book',
    defaultBillingAddress: () => 'Default Billing Address',
    defaultShippingAddress: () => 'Default Shipping Address',
    notSetDefaultShipAddr: () => 'You have not set a default shipping address',
    notSetDefaultBillAddr: () => 'You have not set a default billing address',
    shippingAddressUpdated: () => 'The shipping address has been updated',
    shippingAddressDeleted: () => 'The shipping address has been removed',
    billingAddressUpdated: () => 'The billing address has been updated',
  },
  _userMessagesPage: {
    userMessages: () => 'User Questions & Answers',
    emptyMessage: () => 'Message cannot be Empty',
  },
  _userOrdersPage: {
    userOrders: () => 'User Orders',
    sendMessage: () => 'Send Message to User',
    messageDisplay: () => 'Click on any message to display',
    noOrders: () => 'There are no orders in this page',
    itemNotSelected: () => 'Item is not selected',
    selectItem: () => 'Please Select Some Order Item',
    nameOfCargo: () => 'Name of Cargo',
    shipmentNumber: () => 'Shipment Number',
    link: () => 'Link',
  },
  _productListSummary: {
    productListSummary: () => 'Product List Summary',
    allProducts: () => 'All Products',
    approved: () => 'Approved',
    waitingForApproval: () => 'Waiting for Approval',
    approvedUpdate: () => 'Approved (Check for Update)',
    pending: () => 'Pending',
    denied: () => 'Denied',
  },
  _orderListSummary: {
    orderListSummary: () => 'Order List Summary',
    newOrder: () => 'New Orders for Products',
    cancelled: () => 'Cancellation Request',
    processing: () => 'Ready to Ship',
    shipped: () => 'Shipped',
  },
  _userGuides: {
    addUserGuide: () => 'Create User Guides',
    updateUserGuide: () => 'Update User Guides',
  },
};
export default En18n;
